(define/contract (find-duplicate nums)
  (-> (listof exact-integer?) exact-integer?)
  (let* ((n (length nums))
         (l 1)
         (r (- n 1))
         (ans -1))
    (let loop ()
      (when (<= l r)
        (let* ((mid (quotient (+ l r) 2))
               (cnt (length (filter (Î» (num) (<= num mid)) nums))))
          (if (<= cnt mid)
              (set! l (+ mid 1))
              (begin
                (set! r (- mid 1))
                (set! ans mid)))
          (loop))))
    ans))